Testing the program included quite a bit of smaller tests in order to gain in insight into how the overall program would perform. For example, the priority queue structs and functions each had to be tested to ensure that they would be able to handle any and all types of inputs that I would be giving to them. I used this method for not only the priority queue but the first-in first-out queues as well. For the functions included in the random.c and the processing.c files I used various "testing" functions that would itterate over tens of thousands of possible inputs to make sure that all of my bases were covered. As for edge-cases, I manually checked that they would process to give the correct output.

Though there was alot of testing and, quite frankly, some trial and error, I learned alot more from this project than I thought I would. I learned much more about the C language from this one project than I did from other entire courses revolving around C. One example of a nuance in the C language that I learned while writing this program is that C won't compile properly if during a switch statement, the case is immediately followed by a declaration of any type. The proper format must be case followed by statement or break, but cannot be case followed immediately by a declaration, like "int x = 10;".

Sidenote: Read the RUNS.odt/RUNS.pdf file for the exact same content in better formatting.
